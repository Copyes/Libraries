!(function(t, e) {
  'object' == typeof exports && 'object' == typeof module
    ? (module.exports = e())
    : 'function' == typeof define && define.amd
      ? define('barrage2', [], e)
      : 'object' == typeof exports
        ? (exports.barrage2 = e())
        : (t.barrage2 = e())
})(this, function() {
  return (function(t) {
    function e(o) {
      if (n[o]) return n[o].exports
      var r = (n[o] = { i: o, l: !1, exports: {} })
      return t[o].call(r.exports, r, r.exports, e), (r.l = !0), r.exports
    }
    var n = {}
    return (
      (e.m = t),
      (e.c = n),
      (e.d = function(t, n, o) {
        e.o(t, n) ||
          Object.defineProperty(t, n, {
            configurable: !1,
            enumerable: !0,
            get: o
          })
      }),
      (e.n = function(t) {
        var n =
          t && t.__esModule
            ? function() {
                return t.default
              }
            : function() {
                return t
              }
        return e.d(n, 'a', n), n
      }),
      (e.o = function(t, e) {
        return Object.prototype.hasOwnProperty.call(t, e)
      }),
      (e.p = ''),
      e((e.s = 1))
    )
  })([
    function(t, e) {
      function n(t, e) {
        if (!(t instanceof e))
          throw new TypeError('Cannot call a class as a function')
      }
      var o = (function() {
          function t(t, e) {
            for (var n = 0; n < e.length; n++) {
              var o = e[n]
              ;(o.enumerable = o.enumerable || !1),
                (o.configurable = !0),
                'value' in o && (o.writable = !0),
                Object.defineProperty(t, o.key, o)
            }
          }
          return function(e, n, o) {
            return n && t(e.prototype, n), o && t(e, o), e
          }
        })(),
        r = function(t, e, n) {
          return (t + Math.random() * (e - t)).toFixed(n)
        },
        i = function(t, e) {
          var n = t.indexOf(e)
          n > -1 && t.splice(n, 1)
        }
      !(function() {
        function t(e) {
          n(this, t),
            this.generateContainer(),
            (this.textArr = e.textArr),
            (this.fontSize = e.fontSize),
            (this.container = document.querySelector(e.container))
          var o = this.container.getBoundingClientRect()
          ;(this.containerWidth = o.right - o.left),
            (this.containerHeight = o.bottom - o.top),
            (this.pathNums = e.pathNums),
            (this.random = e.random),
            (this.topArr = this.setPath()),
            (this.speedRange = [
              this.containerWidth / e.speedRange[0] / 63,
              this.containerWidth / e.speedRange[1] / 63
            ]),
            (this.nums = e.nums)
          for (var r = 0; r < this.nums; ++r) this.appendBarrage()
        }
        o(t, [
          {
            key: 'generateContainer',
            value: function() {
              var t = document.createElement('div')
              ;(t.className = 'barrage_container'),
                (t.style.overflow = 'hidden'),
                (t.style.position = 'relative'),
                (t.style.width = '100%'),
                (t.style.height = '40vw'),
                (t.style.backgroundSize = 'cover'),
                (t.style.backgroundRepeat = 'no-repeat'),
                (t.style.backgroundPosition = 'center'),
                (t.style.width = '100%'),
                (t.style.width = '100%'),
                document.querySelector('body').appendChild(t)
            }
          },
          {
            key: 'appendBarrage',
            value: function() {
              var t = this,
                e = this.getRandomText(),
                n = this.getRandomColor(),
                o = this.getRandomSize(),
                a = this.getRandomTop()
              i(this.topArr, a)
              var s = e.length * this.fontSize[1] + 20,
                u = document.createElement('div')
              ;(u.style.position = 'absolute'),
                (u.style.right = '-' + s + 'px'),
                (u.style.whiteSpace = 'nowrap'),
                (u.style.willChange = 'transform'),
                (u.style.color = n),
                (u.style.fontSize = o + 'px'),
                (u.innerText = e),
                this.container.appendChild(u)
              var h = {
                oDiv: u,
                textWidth: s,
                position: r(0, t.random, 0),
                top: a,
                speed: r(t.speedRange[0], t.speedRange[1], 5)
              }
              this.run(h)
            }
          },
          {
            key: 'getRandomText',
            value: function() {
              var t = r(0, this.textArr.length - 1, 0)
              return this.textArr[t]
            }
          },
          {
            key: 'getRandomColor',
            value: function() {
              return '#' + Math.floor(16777215 * Math.random()).toString(16)
            }
          },
          {
            key: 'getRandomTop',
            value: function() {
              var t = r(0, this.topArr.length - 1, 0)
              return this.topArr[t]
            }
          },
          {
            key: 'getRandomSize',
            value: function() {
              return r(this.fontSize[0], this.fontSize[1], 0)
            }
          },
          {
            key: 'setPath',
            value: function() {
              for (
                var t = this.containerHeight / this.pathNums, e = [], n = 0;
                n < this.pathNums;
                ++n
              )
                e.push(n * t)
              return e
            }
          },
          {
            key: 'run',
            value: function(t) {
              var e = this
              window.requestAnimationFrame(function() {
                e.setMove(t)
              })
            }
          },
          {
            key: 'setMove',
            value: function(t) {
              ;(t.oDiv.style.transform =
                'translate3D(' + t.position + 'px, ' + t.top + 'px, 0)'),
                (t.position = t.position - t.speed),
                -t.position > this.containerWidth + t.textWidth
                  ? (t.oDiv.remove(),
                    this.topArr.push(t.top),
                    this.appendBarrage())
                  : this.run(t)
            }
          }
        ])
      })()
    },
    function(t, e, n) {
      n(0), (t.exports = n(0))
    }
  ])
})
//# sourceMappingURL=barrage2.min.js.map
